# flake8: noqa
configfile: "config.yaml"

if config['filter_focal_seqs']:
    FOCAL_SEQS = 'filtered-focal-seqs.qza'
else:
    FOCAL_SEQS = 'focal-seqs.qza'

VIEW_FOCAL_SEQS = FOCAL_SEQS.replace('.qza', '.qzv')

rule all:
    input:
      config['output_dir'] + 'context-seqs.qzv',
      VIEW_FOCAL_SEQS,
      config['output_dir'] + 'selection-summary.qzv',
      config['output_dir'] + config['output_seqs_basename'] + '.fasta'

rule import_context_seqs:
    input: config['context_seqs_fp']
    output: config['output_dir'] + 'context-seqs.qza'
    shell: """
    qiime tools import \
      --input-path {input} \
      --type 'FeatureData[Sequence]' \
      --input-format GISAIDDNAFASTAFormat \
      --output-path {output}
    """

rule import_focal_seqs:
    input: config['focal_seqs_fp']
    output: config['output_dir'] + 'focal-seqs.qza'
    shell: """
    qiime tools import \
      --input-path {input} \
      --type 'FeatureData[Sequence]' \
      --input-format GISAIDDNAFASTAFormat \
      --output-path {output}
    """

rule view_context_seqs:
    input: config['output_dir'] + 'context-seqs.qza'
    output: config['output_dir'] + 'context-seqs.qzv'
    shell: """
    qiime feature-table tabulate-seqs \
      --i-data {input} \
      --o-visualization {output}
    """

rule filter_context_missing_metadata:
    input:
      context_seqs_qza = config['output_dir'] + 'context-seqs.qza',
      context_metadata = config['context_metadata_fp']
    output: config['output_dir'] + 'context-seqs-w-metadata.qza'
    shell: """
    qiime feature-table filter-seqs \
      --i-data {input.context_seqs_qza} \
      --m-metadata-file {input.context_metadata} \
      --o-filtered-data {output}
    """

rule filter_seqs:
    input: config['output_dir'] + 'context-seqs-w-metadata.qza'
    params:
      max_ambiguous = config['max_ambiguous']
    output: config['output_dir'] + 'filtered-context-seqs.qza'
    shell: """
    qiime genome-sampler filter-seqs \
      --i-sequences {input} \
      --p-max-proportion-ambiguous {params.max_ambiguous} \
      --o-filtered-sequences {output}
    """

rule filter_focal_seqs:
    input: config['output_dir'] + 'focal-seqs.qza'
    params:
      max_ambiguous = config['max_ambiguous']
    output: config['output_dir'] + 'filtered-focal-seqs.qza'
    shell: """
    qiime genome-sampler filter-seqs \
      --i-sequences {input} \
      --p-max-proportion-ambiguous {params.max_ambiguous} \
      --o-filtered-sequences {output}
    """

rule view_focal_seqs:
    input: config['output_dir'] + '{filtered,.*}focal-seqs.qza'
    output: config['output_dir'] + '{filtered,.*}focal-seqs.qzv'
    shell: """
    qiime feature-table tabulate-seqs \
      --i-data {input} \
      --o-visualization {output}
    """

rule sample_longitudinal:
    input:
      dates_file = config['context_metadata_fp'],
      filtered_context = config['output_dir'] + 'filtered-context-seqs.qza'
    params:
      start_date_flag = ("--p-start-date " + config['start_date']
                         if config.get('start_date') else ""),
      samples_per_interval = config['samples_per_interval'],
      days_per_interval = config['days_per_interval'],
      dates_column_name = config['dates_column_name']
    output: config['output_dir'] + 'date-selection.qza'
    shell: """
    qiime genome-sampler sample-longitudinal \
      --i-context-seqs {input.filtered_context} \
      {params.start_date_flag} \
      --p-samples-per-interval {params.samples_per_interval} \
      --p-days-per-interval {params.days_per_interval} \
      --m-dates-file {input.dates_file} \
      --m-dates-column {params.dates_column_name} \
      --o-selection {output}
    """

rule sample_diversity:
    input: config['output_dir'] + 'filtered-context-seqs.qza'
    params:
      diversity_percent_id = config['diversity_percent_id']
    output: config['output_dir'] + 'diversity-selection.qza'
    threads: workflow.cores
    shell: """
    qiime genome-sampler sample-diversity \
      --i-context-seqs {input} \
      --p-percent-id {params.diversity_percent_id} \
      --o-selection {output} \
      --p-n-threads {threads}
    """

rule sample_neighbors:
    input:
      filtered_context = config['output_dir'] + 'filtered-context-seqs.qza',
      focal_seqs = config['output_dir'] + FOCAL_SEQS
    params:
      context_metadata_fp = config['context_metadata_fp'],
      locale_column_name = config['locale_column_name'],
      neighbors_percent_id = config['neighbors_percent_id'],
      samples_per_cluster = config['samples_per_cluster']
    output: config['output_dir'] + 'neighbor-selection.qza',
    threads: workflow.cores
    shell: """
    qiime genome-sampler sample-neighbors \
      --i-focal-seqs {input.focal_seqs} \
      --i-context-seqs {input.filtered_context} \
      --m-locale-file {params.context_metadata_fp} \
      --m-locale-column {params.locale_column_name} \
      --p-percent-id {params.neighbors_percent_id} \
      --p-samples-per-cluster {params.samples_per_cluster} \
      --o-selection {output} \
      --p-n-threads {threads}
      """

rule summarize_selections:
    input:
      date_selection = config['output_dir'] + 'date-selection.qza',
      diversity_selection = config['output_dir'] + 'diversity-selection.qza',
      neighbor_selection = config['output_dir'] + 'neighbor-selection.qza'
    output: config['output_dir'] + 'selection-summary.qzv'
    shell: """
    qiime genome-sampler summarize-selections \
      --i-selections {input.date_selection} \
      --i-selections {input.diversity_selection} \
      --i-selections {input.neighbor_selection} \
      --o-visualization {output}
    """

rule combine_selections:
    input:
      date_selection = config['output_dir'] + 'date-selection.qza',
      diversity_selection = config['output_dir'] + 'diversity-selection.qza',
      neighbor_selection = config['output_dir'] + 'neighbor-selection.qza'
    output: config['output_dir'] + 'combined-selection.qza'
    shell: """
    qiime genome-sampler combine-selections \
      --i-selections {input.date_selection} \
      --i-selections {input.diversity_selection} \
      --i-selections {input.neighbor_selection} \
      --o-combined-selection {output}
    """

rule filter_to_subsample:
    input:
      filtered_context = config['output_dir'] + 'filtered-context-seqs.qza',
      combined_selection = config['output_dir'] + 'combined-selection.qza'
    output: config['output_dir'] + 'subsampled-context-seqs.qza'
    shell: """
    qiime feature-table filter-seqs \
      --i-data {input.filtered_context} \
      --m-metadata-file {input.combined_selection} \
      --o-filtered-data {output}
    """

rule merge_seqs:
    input:
      focal_seqs = config['output_dir'] + FOCAL_SEQS,
      subsampled_context = config['output_dir'] + 'subsampled-context-seqs.qza'
    output: config['output_seqs_basename'] + '.qza'
    shell: """
    qiime feature-table merge-seqs \
      --i-data {input.subsampled_context} {input.focal_seqs} \
      --o-merged-data {output}
    """

rule export:
    input: config['output_dir'] + config['output_seqs_basename'] + '.qza'
    output: config['output_dir'] + config['output_seqs_basename'] + '.fasta'
    shell: """
    qiime tools export \
      --input-path {input} \
      --output-path {output} \
      --output-format DNAFASTAFormat
    """
